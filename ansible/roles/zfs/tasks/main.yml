### Reinit keyring
# As keyring is initialized at boot, and copied to the install dir with pacstrap, and ntp is running
# Time changed after keyring initialization, it leads to malfunction
# Keyring needs to be reinitialised properly to be able to sign archzfs key.
# rm -Rf /etc/pacman.d/gnupg
- name: Delete pacman keyring
  ansible.builtin.file:
    path: /etc/pacman.d/gnupg
    state: absent

# pacman-key --init
- name: Initialize pacman keyring
  command: pacman-key --init

# pacman-key --populate archlinux
- name: Initialize pacman keyring
  command: pacman-key --populate archlinux

# pacman-key --recv-keys F75D9D76 --keyserver https://keyserver.ubuntu.com/
- name: Initialize pacman keyring
  command: pacman-key --recv-keys F75D9D76 # --keyserver https://keyserver.ubuntu.com/

# pacman-key --lsign-key F75D9D76
- name: Initialize pacman keyring
  command: pacman-key --lsign-key F75D9D76

# pacman -S archlinux-keyring --noconfirm
- name: Initialize pacman keyring
  command: pacman -S archlinux-keyring --noconfirm

- name: Add archzfs repo to /etc/pacman.conf
  ansible.builtin.blockinfile:
    path: /etc/pacman.conf
    marker: "# {mark} pacman_conf_archzfs"
    insertafter: EOF
    state: present
    block: |
      [archzfs]
      Server = http://archzfs.com/archzfs/x86_64
      Server = http://mirror.sum7.eu/archlinux/archzfs/archzfs/x86_64
      Server = https://mirror.biocrafting.net/archlinux/archzfs/archzfs/x86_64

- name: Update pacman
  shell: pacman -Sy

# pacman -Syu --noconfirm zfs-dkms zfs-utils
- name: Install zfs
  pacman:
    name:
      - zfs-dkms
      - zfs-utils
    update_cache: true
    state: present


- name: Enable ZFS
  shell: '{{ item }}'
  loop:
    #- zpool set cachefile=/etc/zfs/zpool.cache zroot
    - systemctl enable zfs.target
    - systemctl enable zfs-import-cache
    - systemctl enable zfs-mount
    - systemctl enable zfs-import.target
    - zgenhostid $(hostid) -f


###############################
# - name: install zrepl
#   become: yes
#   become_user: aur_builder
#   aur:
#     name: zrepl


# - name: create zrepl dir
#   file:
#     path: /etc/zrepl
#     state: directory

# - name: configure zrepl
#   blockinfile:
#     block: "{{ lookup('file', 'zrepl.yml') }}"
#     marker: "# {mark} snapshot config"
#     dest: /etc/zrepl/zrepl.yml
#     create: yes
#   notify: restart zrepl

- name: setup daily zfs scrub
  copy:
    src: zscrub
    dest: /etc/cron.weekly/
    mode: 0755

