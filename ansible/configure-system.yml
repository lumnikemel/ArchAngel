- name: Set up new System
  hosts: all # chroot
  connection: ssh
  remote_user: root
  become: yes
  gather_facts: no

  vars:
    - ansible_port: "{{ ssh_alt_port }}"
    - ansible_ssh_pass: password
    #- ansible_ssh_private_key_file: ~/.ssh/CommonKey

  pre_tasks:
    - name: Set boot device facts for external boot-device
      set_fact:
        boot_device_facts:
          - name: "{{ boot_devices.split('/')[-1] }}"
            id: "{{ boot_devices.split('/')[-1] }}"
            path: "{{ boot_devices }}"
            root_device: false
            boot_device: true
            partitions:
              - name: EFI System
                purpose: boot
                part_num: 1
                part_start: 1MiB
                size: 1GiB
                fstype: vfat
                flags: ["esp"]
                id: "{{ boot_devices.split('/')[-1] }}-part1"
                path: "{{ boot_devices }}-part1"
      when: boot_devices != 'root'

    - name: Set root device facts
      set_fact:
        root_device_facts: |
          {% set devices = [] %}
          {% for device in root_devices %}
            {% set device_name = device.split('/')[-1] %}
            {% set partitions = [] %}
            {% if loop.first and boot_devices == 'root' %}
              {% set _ = partitions.append({
                'name': 'EFI System',
                'purpose': 'boot',
                'part_num': 1,
                'part_start': '1MiB',
                'size': '1GiB',
                'fstype': 'vfat',
                'flags': ["esp"],
                'id': device_name + '-part1',
                'path': device + '-part1'
              }) %}
              {% set root_part_start = '1GiB' %}
            {% else %}
              {% set _ = partitions.append({
                'name': 'Data Partition',
                'purpose': 'data',
                'part_num': 1,
                'part_start': '1MiB',
                'size': '1GiB',
                'fstype': 'vfat',
                'flags': [],
                'id': device_name + '-part1',
                'path': device + '-part1'
              }) %}
              {% set root_part_start = '1GiB' %}
            {% endif %}
            {% set _ = partitions.append({
              'name': 'Linux LUKS',
              'purpose': 'zfs',
              'part_num': partitions|length + 1,
              'part_start': root_part_start,
              'size': '100%',
              'fstype': 'None',
              'flags': [],
              'id': device_name + '-part' + (partitions|length + 1)|string,
              'path': device + '-part' + (partitions|length + 1)|string
            }) %}
            {% set _ = devices.append({
              'name': device_name,
              'id': device_name,
              'path': device,
              'root_device': true,
              'boot_device': boot_devices == 'root' and loop.first,
              'partitions': partitions
            }) %}
          {% endfor %}
          {{ devices }}

    - name: Set devices fact
      set_fact:
        devices: "{{ (boot_device_facts | default([])) + (root_device_facts | default([]) | from_yaml) }}"

    - name: Generate vdev_layout variable
      set_fact:
        vdev_layout: "{{ vdev_layout | default('') + ' ' + 'dm-name-' + fde.luks.prefix + item.1.id }}"
      loop: "{{ query('subelements', devices, 'partitions') }}"
      when:
        - item.1.purpose == 'zfs'
        - item.0.root_device

  tasks:
    - name: Configure default user
      import_role:
        name: user
      tags: [ user ]
    
    - name: Configure root
      import_role:
        name: root
      tags: [ root ]

    - name: Configure pacman
      import_role:
        name: pacman
      tags: [ pacman ]

    - name: Configure AUR
      import_role:
        name: aur
      tags: [ aur ]

    - name: Configure ZFS
      import_role:
        name: zfs
      tags: [ zfs ]

    - name: Configure locale
      import_role:
        name: locale
      tags: [ locale ]

    - name: Configure NTP
      import_role:
        name: ntp
      tags: [ ntp ]

    - name: Configure DHCP
      import_role:
        name: dhcp
      tags: [ dhcp ]

    - name: Configure bootloader
      import_role:
        name: bootloader
      tags: [ bootloader ]

    - name: Configure sshd
      import_role:
        name: sshd
      tags: [ sshd ]

    - name: Configure hostname
      import_role:
        name: hostname
      tags: [ hostname ]
      
    # - name: Configure dektop environment
    #   import_role:
    #     name: desktop
    #   tags: [ desktop ]

